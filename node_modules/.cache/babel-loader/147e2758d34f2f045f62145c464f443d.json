{"ast":null,"code":"import _classCallCheck from \"/Users/kev/develop/sudoku-solver-v2-react-app/sudoku-solver-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kev/develop/sudoku-solver-v2-react-app/sudoku-solver-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kev/develop/sudoku-solver-v2-react-app/sudoku-solver-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kev/develop/sudoku-solver-v2-react-app/sudoku-solver-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kev/develop/sudoku-solver-v2-react-app/sudoku-solver-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kev/develop/sudoku-solver-v2-react-app/sudoku-solver-react-app/src/containers/SudokuSolver.jsx\";\nimport React, { Component } from 'react';\nimport CellComponent from \"../components/CellComponent\";\n\nvar SudokuSolver =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SudokuSolver, _Component);\n\n  function SudokuSolver(props) {\n    var _this;\n\n    _classCallCheck(this, SudokuSolver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SudokuSolver).call(this, props));\n\n    _this.createGrid = function () {\n      var gridrender = [];\n      gridrender.push(React.createElement(CellComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n      gridrender.push(React.createElement(CellComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n      return gridrender;\n    };\n\n    _this.state.grid = [];\n\n    _this.state.grid.push(React.createElement(CellComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n\n    _this.state.grid.push(React.createElement(CellComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n\n    return _this;\n  }\n\n  _createClass(SudokuSolver, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.state.grid.map());\n    }\n  }]);\n\n  return SudokuSolver;\n}(Component);\n\nexport default SudokuSolver;","map":{"version":3,"sources":["/Users/kev/develop/sudoku-solver-v2-react-app/sudoku-solver-react-app/src/containers/SudokuSolver.jsx"],"names":["React","Component","CellComponent","SudokuSolver","props","createGrid","gridrender","push","state","grid","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;IAEMC,Y;;;;;AAEF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UASnBC,UATmB,GASN,YAAM;AACf,UAAIC,UAAU,GAAG,EAAjB;AAEAA,MAAAA,UAAU,CAACC,IAAX,CAAgB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACAD,MAAAA,UAAU,CAACC,IAAX,CAAgB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AAEA,aAAOD,UAAP;AACH,KAhBkB;;AAGf,UAAKE,KAAL,CAAWC,IAAX,GAAkB,EAAlB;;AACA,UAAKD,KAAL,CAAWC,IAAX,CAAgBF,IAAhB,CAAqB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB;;AACA,UAAKC,KAAL,CAAWC,IAAX,CAAgBF,IAAhB,CAAqB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB;;AALe;AAOlB;;;;6BAWQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,EADL,CADJ;AAKH;;;;EA1BsBT,S;;AA6B3B,eAAeE,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport CellComponent from \"../components/CellComponent\";\n\nclass SudokuSolver extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state.grid = [];\n        this.state.grid.push(<CellComponent/>);\n        this.state.grid.push(<CellComponent/>);\n\n    };\n\n    createGrid = () => {\n        let gridrender = [];\n\n        gridrender.push(<CellComponent/>);\n        gridrender.push(<CellComponent/>);\n\n        return gridrender;\n    };\n\n    render() {\n        return (\n            <div>\n                {this.state.grid.map()}\n            </div>\n        );\n    }\n\n}\nexport default SudokuSolver;"]},"metadata":{},"sourceType":"module"}